#ifndef UI_DC_H
#define UI_DC_H

// Includes ////////////////////////////////////////////////////////////////

#include "UI_Common.h"

// Classes /////////////////////////////////////////////////////////////////

namespace UI
{
	class DC
	{
	public:

		////////////////////////////////////////////////////////////////////
		// Public //////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////

		// Functions ///////////////////////////////////////////////////////

		DC(HDC handle, bool restore = true);
		DC(WPARAM wParam, bool restore = true);
		DC(const DC &other);
		DC &operator=(DC other);
		virtual ~DC();

		HDC GetHandle() const;
		bool DrawFocusRect(const RECT &rect) const;
		int DrawText(const std::wstring &text, RECT &rect, UINT format = 0) const;
		bool FillRect(const RECT &rect, HBRUSH brush) const;
		bool FrameRect(const RECT &rect, HBRUSH brush) const;
		RECT FrameRect(const RECT &rect, HBRUSH brush, int size) const;
		HBRUSH GetBrush() const;
		int GetDeviceCaps(int index) const;
		bool GetTextExtent(const std::wstring &text, SIZE &size) const;
		bool GetTextMetrics(TEXTMETRICW &textMetrics) const;
		bool InvertRect(const RECT &rect) const;
		HGDIOBJ SelectObject(HGDIOBJ object) const;
		COLORREF SetBackgroundColor(COLORREF color) const;
		COLORREF SetBrushColor(COLORREF color) const;
		COLORREF SetTextColor(COLORREF color) const;

		////////////////////////////////////////////////////////////////////

	private:

		////////////////////////////////////////////////////////////////////
		// Private /////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////

		// Variables ///////////////////////////////////////////////////////

		HDC handle;
		int state;
		int *references;

		////////////////////////////////////////////////////////////////////
	};
}

////////////////////////////////////////////////////////////////////////////

#endif
