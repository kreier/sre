#ifndef UI_DPI_H
#define UI_DPI_H

// Includes ////////////////////////////////////////////////////////////////

#include "UI_Common.h"

// Classes /////////////////////////////////////////////////////////////////

namespace UI
{
	class Window;

	class Dpi
	{
	public:

		////////////////////////////////////////////////////////////////////
		// Public //////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////

		// Functions ///////////////////////////////////////////////////////

		Dpi(const Window &window);
		Dpi(int dpi);

		int Get() const;
		int Scale(int value) const;

		bool AdjustWindowRect(RECT &rect, DWORD style, DWORD exStyle, bool menu) const;
		int GetSystemMetrics(int index) const;

		////////////////////////////////////////////////////////////////////

	private:

		////////////////////////////////////////////////////////////////////
		// Private /////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////

		// Typedefs ////////////////////////////////////////////////////////

		typedef UINT (WINAPI *GetDpiForWindowFunction)(HWND);
		typedef BOOL (WINAPI *AdjustWindowRectExForDpiFunction)(RECT *, DWORD, BOOL, DWORD, UINT);
		typedef int (WINAPI *GetSystemMetricsForDpiFunction)(int, UINT);

		// Init Functions //////////////////////////////////////////////////

		int InitDpi(const Window &window) const;

		// Static Variables ////////////////////////////////////////////////

		static HMODULE module;
		static GetDpiForWindowFunction GetDpiForWindow;
		static AdjustWindowRectExForDpiFunction AdjustWindowRectExForDpi;
		static GetSystemMetricsForDpiFunction GetSystemMetricsForDpi;

		// Variables ///////////////////////////////////////////////////////

		int dpi;

		////////////////////////////////////////////////////////////////////
	};
}

////////////////////////////////////////////////////////////////////////////

#endif
