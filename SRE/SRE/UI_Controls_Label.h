#ifndef UI_CONTROLS_LABEL_H
#define UI_CONTROLS_LABEL_H

// Includes ////////////////////////////////////////////////////////////////

#include "UI_Control.h"
#include "UI_Common.h"

// Classes /////////////////////////////////////////////////////////////////

namespace UI
{
	class Window;
	class Font;

	namespace Controls
	{
		class Label : public Control
		{
		public:

			////////////////////////////////////////////////////////////////////
			// Public //////////////////////////////////////////////////////////
			////////////////////////////////////////////////////////////////////

			// Constants ///////////////////////////////////////////////////////

			static const DWORD DefaultStyle = 0;
			static const DWORD DefaultExStyle = 0;

			// Functions ///////////////////////////////////////////////////////

			Label(const Window &window, const std::wstring &text, DWORD style = DefaultStyle, DWORD exStyle = DefaultExStyle);

			bool SetFont(const Font &font);
			COLORREF GetTextColor() const;
			bool SetTextColor(COLORREF color);
			COLORREF GetBackgroundColor() const;
			bool SetBackgroundColor(COLORREF color);

			////////////////////////////////////////////////////////////////////

		private:

			////////////////////////////////////////////////////////////////////
			// Private /////////////////////////////////////////////////////////
			////////////////////////////////////////////////////////////////////

			// Functions ///////////////////////////////////////////////////////

			LRESULT OnCtlColor(WPARAM wParam, LPARAM lParam);
			bool AddMessages();

			////////////////////////////////////////////////////////////////////
		};
	}
}

////////////////////////////////////////////////////////////////////////////

#endif
